version: "3.9"

# DEVELOPMENT VERSION - für schnelle Code-Änderungen ohne Rebuild
# Usage: docker-compose -f docker-compose.dev.yml up -d

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-vertrieb}
      POSTGRES_USER: ${DB_USER:-vertrieb}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-vertrieb}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "0.0.0.0:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-vertrieb} -d ${DB_NAME:-vertrieb}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # FastAPI Application - WITH VOLUME MOUNTS for development
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      DB_HOST: db
      DB_PORT: 5432
    volumes:
      # DEVELOPMENT: Mount source code for instant changes
      - ./app:/app/app:ro
      - ./logs:/app/logs
      - ./Kundenstamm_Daten.csv:/app/data/customers.csv:ro
      - ./ABC-Kunden.csv:/app/data/abc_customers.csv:ro
    networks:
      - app-network
    # Development server with auto-reload
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/user/nginx-domains.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge